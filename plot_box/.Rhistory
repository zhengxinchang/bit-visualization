# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
}
wb <- createWorkbook()
for (cluster in c("7","0")){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
Idents(MonocyteSubData)<-MonocyteSubData$integrated_snn_res.0.2
cluster_list<-MonocyteSubData$integrated_snn_res.0.2 %>%unique()
pval <- 0.1
logfc <- 0
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "down regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "down gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "dwon gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
BiocManager::install("YK Ma:
不用不用，就试一下STRINGdb吧
")
BiocManager::install("STRINGdb")
library(STRINGdb)
string_db <- STRINGdb$new( version="11", species=9606,
score_threshold=400, input_directory="")
stringIdForI <- string_db$mp("EGFR")
neighbors <- string_db$get_neighbors(stringIdForI)
enrichment <- string_db$get_enrichment(neighbors)
heand(enrichment)
head(enrichment)
mini<-head(enrichment)
View(mini)
stringIdForI <- string_db$mp("TP53")
neighbors <- string_db$get_neighbors(stringIdForI)
enrichment <- string_db$get_enrichment(neighbors)
mini<-head(enrichment)
?enrichment
enrichment
saveRDS(enrichment,"enrichment.rds")
library(maftools)
print("aaa")
library(scatterplot3d)
print("aaa")
source('D:/knowledgedb_download/vcfsummary/MutSigRun.r', echo=TRUE)
# makePie(plot_example)
similarity <-as.data.frame(t(plot_example$weights))
print("aaa")
a="NULL"
a =="NULL"
option_list = list(
# file and Canvas settings
make_option(c("--file"), type="character", default="/xtdisk/baoym_group/zhengxcngdc/projects/biocloud/units/plot_mafsummary/TCGA.LAML.mutect.27f42413-6d8f-401f-9d07-d019def8939e.DR-10.0.somatic.maf",help="MAF file name"), # type=file
make_option(c("--outdir"), type="character", default="./",help="Output file path"),
make_option(c("--width"), type="character", default="10", help="Width [inch]", metavar="8 inch"),
make_option(c("--height"), type="character", default="6", help="Height [inch]", metavar="6 inch"),
make_option(c("--top"), type="character", default="10", help="how many top genes to be drawn. defaults to 10."),
make_option(c("--rmOutlier "), type="character", default="NULL", help="If TRUE removes outlier from boxplot."), #type=select:FALSE,TRUE*
make_option(c("--dashboard"), type="character", default="NULL", help="If FALSE plots simple summary instead of dashboard style." ),  #type=select:TRUE*,FALSE
make_option(c("--titvRaw"), type="character", default="NULL", help="TRUE. If false instead of raw counts, plots fraction." ), #type=select:TRUE*,FALSE
make_option(c("--log_scale"), type="character", default="NULL", help="FALSE. If TRUE log10 transforms Variant Classification, Variant Type and Variants per sample sub-plots."), # type=select:TRUE*,FALSE
make_option(c("--addStat"), type="character", default="NULL", help="Can be either mean or median. Default NULL."), #type=select:NULL*,mean,median
make_option(c("--showBarcodes"), type="character", default="NULL", help="include sample names in the top bar plot."), #type=select:FALSE,TRUE*
make_option(c("--fs"), type="character", default="1",help="base size for text. Default 1"),
make_option(c("--palette"), type="character", default="NULL", help="color palette"), # tpye=select:NULL*,npg,aaas,nejm,lancet,jama,jco,ucscgb,d3,locuszoom,igv,uchicago,startrek,tron,futurama,rickandmorty,simpsons
make_option(c("--mainTitleSize"), type="character", default="10", help="font size for title and subtitle. Default 10"),
make_option(c("--subTitleSize"), type="character", default="8", help="font size for title and subtitle. Default 8"),
)
# parse arguments
option_list = list(
# file and Canvas settings
make_option(c("--file"), type="character", default="/xtdisk/baoym_group/zhengxcngdc/projects/biocloud/units/plot_mafsummary/TCGA.LAML.mutect.27f42413-6d8f-401f-9d07-d019def8939e.DR-10.0.somatic.maf",help="MAF file name"), # type=file
make_option(c("--outdir"), type="character", default="./",help="Output file path"),
make_option(c("--width"), type="character", default="10", help="Width [inch]", metavar="8 inch"),
make_option(c("--height"), type="character", default="6", help="Height [inch]", metavar="6 inch"),
make_option(c("--top"), type="character", default="10", help="how many top genes to be drawn. defaults to 10."),
make_option(c("--rmOutlier "), type="character", default="NULL", help="If TRUE removes outlier from boxplot."), #type=select:FALSE,TRUE*
make_option(c("--dashboard"), type="character", default="NULL", help="If FALSE plots simple summary instead of dashboard style." ),  #type=select:TRUE*,FALSE
make_option(c("--titvRaw"), type="character", default="NULL", help="TRUE. If false instead of raw counts, plots fraction." ), #type=select:TRUE*,FALSE
make_option(c("--log_scale"), type="character", default="NULL", help="FALSE. If TRUE log10 transforms Variant Classification, Variant Type and Variants per sample sub-plots."), # type=select:TRUE*,FALSE
make_option(c("--addStat"), type="character", default="NULL", help="Can be either mean or median. Default NULL."), #type=select:NULL*,mean,median
make_option(c("--showBarcodes"), type="character", default="NULL", help="include sample names in the top bar plot."), #type=select:FALSE,TRUE*
make_option(c("--fs"), type="character", default="1",help="base size for text. Default 1"),
make_option(c("--palette"), type="character", default="NULL", help="color palette"), # tpye=select:NULL*,npg,aaas,nejm,lancet,jama,jco,ucscgb,d3,locuszoom,igv,uchicago,startrek,tron,futurama,rickandmorty,simpsons
make_option(c("--mainTitleSize"), type="character", default="10", help="font size for title and subtitle. Default 10"),
make_option(c("--subTitleSize"), type="character", default="8", help="font size for title and subtitle. Default 8"),
)
library(optparse)
option_list = list(
# file and Canvas settings
make_option(c("--file"), type="character", default="/xtdisk/baoym_group/zhengxcngdc/projects/biocloud/units/plot_mafsummary/TCGA.LAML.mutect.27f42413-6d8f-401f-9d07-d019def8939e.DR-10.0.somatic.maf",help="MAF file name"), # type=file
make_option(c("--outdir"), type="character", default="./",help="Output file path"),
make_option(c("--width"), type="character", default="10", help="Width [inch]", metavar="8 inch"),
make_option(c("--height"), type="character", default="6", help="Height [inch]", metavar="6 inch"),
make_option(c("--top"), type="character", default="10", help="how many top genes to be drawn. defaults to 10."),
make_option(c("--rmOutlier "), type="character", default="NULL", help="If TRUE removes outlier from boxplot."), #type=select:FALSE,TRUE*
make_option(c("--dashboard"), type="character", default="NULL", help="If FALSE plots simple summary instead of dashboard style." ),  #type=select:TRUE*,FALSE
make_option(c("--titvRaw"), type="character", default="NULL", help="TRUE. If false instead of raw counts, plots fraction." ), #type=select:TRUE*,FALSE
make_option(c("--log_scale"), type="character", default="NULL", help="FALSE. If TRUE log10 transforms Variant Classification, Variant Type and Variants per sample sub-plots."), # type=select:TRUE*,FALSE
make_option(c("--addStat"), type="character", default="NULL", help="Can be either mean or median. Default NULL."), #type=select:NULL*,mean,median
make_option(c("--showBarcodes"), type="character", default="NULL", help="include sample names in the top bar plot."), #type=select:FALSE,TRUE*
make_option(c("--fs"), type="character", default="1",help="base size for text. Default 1"),
make_option(c("--palette"), type="character", default="NULL", help="color palette"), # tpye=select:NULL*,npg,aaas,nejm,lancet,jama,jco,ucscgb,d3,locuszoom,igv,uchicago,startrek,tron,futurama,rickandmorty,simpsons
make_option(c("--mainTitleSize"), type="character", default="10", help="font size for title and subtitle. Default 10"),
make_option(c("--subTitleSize"), type="character", default="8", help="font size for title and subtitle. Default 8"),
)
setwd("E:/projects/git_repo/biocloud_code")
dat <- read.table("./units/plot_forest/input_forest_plot.txt",header = T,sep = "\t",stringsAsFactors = F)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=convert(opt$xlog), #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab=convert(opt$xlabel) #x轴的标题
)
library(forestplot)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=convert(opt$xlog), #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab=convert(opt$xlabel) #x轴的标题
)
convert <-function(s){
if(class(s)=="character"){
if(s=="NA"){
return(NA)
}else if(s=="NULL"){
return(NULL)
}
else{
return(s)
}
}else{
return(s)
}
}
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=convert(opt$xlog), #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab=convert(opt$xlabel) #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab=convert(opt$xlabel) #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="x") #x轴的标题
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="x") #x轴的标题
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 1, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="x") #x轴的标题
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = "fpDrawCircleCI", #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"),   #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="x") #x轴的标题
dev.off()
.libPaths("/xtdisk/baoym_group/zhengxcngdc/softwares/miniconda3/envs/R36/lib/R/library")
fpColors()
setwd("E:/projects/git_repo/biocloud_code/units/plot_box")
read.csv("./example_box.txt")
read.csv("./example_box.txt") ->dat
distinct(dat[,1])
unique(dat[,1])
