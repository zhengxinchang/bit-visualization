#                       surv.median.line = "hv", # Specify median survival
#                       ggtheme = theme_bw(), # Change ggplot2 theme
#                       palette = "jco",fun="event",
#                       legend.title="Cumulative Incidence of Relapse",
#                       legend.labs=c("AML","ALL"))
(        competingRisk <-ggcompetingrisks(
resCumIncByDis,
gnames = NULL,
gsep = " ",
multiple_panels = F,
ggtheme = theme_bw(),
pval = "xdf",
conf.int = F,
surv.median.line = "hv", # Specify median survival
palette = "jco",
legend.title=list(color="Event",linetype="Group")
)
)
rbind(c("", "Column spanners", NA),
c("", "Cgroup 1", "Cgroup 2"))
## Calculate the grouped cumulative incidence functions (CIF)
resCumIncByDis <- cuminc(ftime   = bmt$ftime,  # failure time variable
fstatus = bmt$status,  # variable with distinct codes for different causes of failure
group   = bmt$dis,  # estimates will calculated within groups
## strata  = ,  # Tests will be stratified on this variable.
rho     = 0, # Power of the weight function used in the tests.
#cencode = "Censored", # value of fstatus variable which indicates the failure time is censored.
## subset = ,
## na.action = na.omit
)
# competingRisk <- ggsurvplot(resCumIncByDis,data=bmt,
#                       pval = "pval = 0.12", conf.int = TRUE,
#                       risk.table = TRUE, # Add risk table
#                       risk.table.col = "strata", # Change risk table color by groups
#                       linetype = "strata", # Change line type by groups
#                       surv.median.line = "hv", # Specify median survival
#                       ggtheme = theme_bw(), # Change ggplot2 theme
#                       palette = "jco",fun="event",
#                       legend.title="Cumulative Incidence of Relapse",
#                       legend.labs=c("AML","ALL"))
(        competingRisk <-ggcompetingrisks(
resCumIncByDis,
gnames = NULL,
gsep = " ",
multiple_panels = F,
ggtheme = theme_bw(),
pval = "xdf",
conf.int = F,
surv.median.line = "hv", # Specify median survival
palette = "jco",
legend.title=list(color="Event",linetype="Group")
)
)
bmt
install.packages("styler")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
install.packages("oxygen2")
install.packages("roxygen2")
install.packages("devtools")
plot(1:20,col="red")
title(sub="aa")
setwd("E:/projects/NGDC/BioCloud/remote_sync_dirs/plot_forest")
group1 <- rnorm(100)+2
group2 <- rnorm(100)+1
group3 <- rnorm(100)+0.5
group4 <- rnorm(100)
group5 <- rnorm(100)-0.5
Data <- data.frame(group1=group1,group2=group2,group3=group3,group4=group4,group5=group5)
Data$group1_2 <- Data$group1 - Data$group2
Data$group1_3 <- Data$group1 - Data$group3
Data$group1_4 <- Data$group1 - Data$group4
Data$group1_5 <- Data$group1 - Data$group5
Data$group2_3 <- Data$group2 - Data$group3
Data$group2_4 <- Data$group2 - Data$group4
Data$group2_5 <- Data$group2 - Data$group5
Data$group3_4 <- Data$group3 - Data$group4
Data$group3_5 <- Data$group3 - Data$group5
Data$group4_5 <- Data$group4 - Data$group5
#计算各个模型之间差值的25%分位数，中位数，75%分位数，同时保留两位有效数字
Data_differ_quantile <- apply(Data[,6:15],2,function(x) round(quantile(x,c(0.25,0.5,0.75)),digits=2))
#设置行名
rownames(Data_differ_quantile)[1:3] <-c("differ_down","differ_median","differ_up")
Data_t <- data.frame(t(Data_differ_quantile)) #转置
#各个模型间的比较
pairs_name <- c("Model1 vs. Model2","Model1 vs. Model3","Model1 vs. Model4","Model1 vs. Model5",
"Model2 vs. Model3","Model2 vs. Model4","Model2 vs. Model5",
"Model3 vs. Model4","Model3 vs. Model5",
"Model4 vs. Model5")
pairs_median <- Data_t$differ_median #差值的中值
pairs_CI <- paste("(", Data_t$differ_down, " ~ ", Data_t$differ_up, ")", sep = "") #差值的四分距的范围
Data_str <- data.frame(pairs_na=pairs_name,pairs_median=pairs_median,pairs_CI=pairs_CI)
Data_str <- as.matrix(Data_str) #类型转为矩阵
Data_str <- rbind(c(NA,"Median","Interquartile ranges"),Data_str) #第一行表示指标说明，NA表示不显示
ls()
Data_str
c(NA,Data_t$differ_median)
c(NA,Data_t$differ_down
)
sfdsd""
c(NA,Data_t$differ_down)
c(NA,Data_t$differ_median)
c(NA,Data_t$differ_up)
Data_str
data.frame(
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up)
)
group1 <- rnorm(100)+2
group2 <- rnorm(100)+1
group3 <- rnorm(100)+0.5
group4 <- rnorm(100)
group5 <- rnorm(100)-0.5
Data <- data.frame(group1=group1,group2=group2,group3=group3,group4=group4,group5=group5)
Data$group1_2 <- Data$group1 - Data$group2
Data$group1_3 <- Data$group1 - Data$group3
Data$group1_4 <- Data$group1 - Data$group4
Data$group1_5 <- Data$group1 - Data$group5
Data$group2_3 <- Data$group2 - Data$group3
Data$group2_4 <- Data$group2 - Data$group4
Data$group2_5 <- Data$group2 - Data$group5
Data$group3_4 <- Data$group3 - Data$group4
Data$group3_5 <- Data$group3 - Data$group5
Data$group4_5 <- Data$group4 - Data$group5
#计算各个模型之间差值的25%分位数，中位数，75%分位数，同时保留两位有效数字
Data_differ_quantile <- apply(Data[,6:15],2,function(x) round(quantile(x,c(0.25,0.5,0.75)),digits=2))
#设置行名
rownames(Data_differ_quantile)[1:3] <-c("differ_down","differ_median","differ_up")
Data_t <- data.frame(t(Data_differ_quantile)) #转置
#各个模型间的比较
pairs_name <- c("Model1 vs. Model2","Model1 vs. Model3","Model1 vs. Model4","Model1 vs. Model5",
"Model2 vs. Model3","Model2 vs. Model4","Model2 vs. Model5",
"Model3 vs. Model4","Model3 vs. Model5",
"Model4 vs. Model5")
pairs_median <- Data_t$differ_median #差值的中值
pairs_CI <- paste("(", Data_t$differ_down, " ~ ", Data_t$differ_up, ")", sep = "") #差值的四分距的范围
Data_str <- data.frame(pairs_na=pairs_name,pairs_median=pairs_median,pairs_CI=pairs_CI)
Data_str <- as.matrix(Data_str) #类型转为矩阵
Data_str <- rbind(c(NA,"Median","Interquartile ranges"),Data_str) #第一行表示指标说明，NA表示不显示
forestplot(Data_str,  #显示的文本
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up), #误差条的上界(此处为差值的75%分位数)
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
jpeg(file = "results_Value_1.jpg",width =2000,height = 1800,units = "px",res =300) #结果保存
forestplot(Data_str,  #显示的文本
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up), #误差条的上界(此处为差值的75%分位数)
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dev.off()
group1 <- rnorm(100)+2
group2 <- rnorm(100)+1
group3 <- rnorm(100)+0.5
group4 <- rnorm(100)
group5 <- rnorm(100)-0.5
Data <- data.frame(group1=group1,group2=group2,group3=group3,group4=group4,group5=group5)
Data$group1_2 <- Data$group1 - Data$group2
Data$group1_3 <- Data$group1 - Data$group3
Data$group1_4 <- Data$group1 - Data$group4
Data$group1_5 <- Data$group1 - Data$group5
Data$group2_3 <- Data$group2 - Data$group3
Data$group2_4 <- Data$group2 - Data$group4
Data$group2_5 <- Data$group2 - Data$group5
Data$group3_4 <- Data$group3 - Data$group4
Data$group3_5 <- Data$group3 - Data$group5
Data$group4_5 <- Data$group4 - Data$group5
#计算各个模型之间差值的25%分位数，中位数，75%分位数，同时保留两位有效数字
Data_differ_quantile <- apply(Data[,6:15],2,function(x) round(quantile(x,c(0.25,0.5,0.75)),digits=2))
#设置行名
rownames(Data_differ_quantile)[1:3] <-c("differ_down","differ_median","differ_up")
Data_t <- data.frame(t(Data_differ_quantile)) #转置
#各个模型间的比较
pairs_name <- c("Model1 vs. Model2","Model1 vs. Model3","Model1 vs. Model4","Model1 vs. Model5",
"Model2 vs. Model3","Model2 vs. Model4","Model2 vs. Model5",
"Model3 vs. Model4","Model3 vs. Model5",
"Model4 vs. Model5")
pairs_median <- Data_t$differ_median #差值的中值
pairs_CI <- paste("(", Data_t$differ_down, " ~ ", Data_t$differ_up, ")", sep = "") #差值的四分距的范围
Data_str <- data.frame(pairs_na=pairs_name,pairs_median=pairs_median,pairs_CI=pairs_CI)
Data_str <- as.matrix(Data_str) #类型转为矩阵
Data_str <- rbind(c(NA,"Median","Interquartile ranges"),Data_str) #第一行表示指标说明，NA表示不显示
jpeg(file = "results_Value_1.jpg",width =2000,height = 1800,units = "px",res =300) #结果保存
forestplot(Data_str,  #显示的文本
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up), #误差条的上界(此处为差值的75%分位数)
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dev.off()
forestplot(Data_str,  #显示的文本
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up), #误差条的上界(此处为差值的75%分位数)
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
rm(list=ls())
library(forestplot)
library(optparse)
library(ggsci)
group1 <- rnorm(100)+2
group2 <- rnorm(100)+1
group3 <- rnorm(100)+0.5
group4 <- rnorm(100)
group5 <- rnorm(100)-0.5
Data <- data.frame(group1=group1,group2=group2,group3=group3,group4=group4,group5=group5)
Data$group1_2 <- Data$group1 - Data$group2
Data$group1_3 <- Data$group1 - Data$group3
Data$group1_4 <- Data$group1 - Data$group4
Data$group1_5 <- Data$group1 - Data$group5
Data$group2_3 <- Data$group2 - Data$group3
Data$group2_4 <- Data$group2 - Data$group4
Data$group2_5 <- Data$group2 - Data$group5
Data$group3_4 <- Data$group3 - Data$group4
Data$group3_5 <- Data$group3 - Data$group5
Data$group4_5 <- Data$group4 - Data$group5
#计算各个模型之间差值的25%分位数，中位数，75%分位数，同时保留两位有效数字
Data_differ_quantile <- apply(Data[,6:15],2,function(x) round(quantile(x,c(0.25,0.5,0.75)),digits=2))
#设置行名
rownames(Data_differ_quantile)[1:3] <-c("differ_down","differ_median","differ_up")
Data_t <- data.frame(t(Data_differ_quantile)) #转置
#各个模型间的比较
pairs_name <- c("Model1 vs. Model2","Model1 vs. Model3","Model1 vs. Model4","Model1 vs. Model5",
"Model2 vs. Model3","Model2 vs. Model4","Model2 vs. Model5",
"Model3 vs. Model4","Model3 vs. Model5",
"Model4 vs. Model5")
pairs_median <- Data_t$differ_median #差值的中值
pairs_CI <- paste("(", Data_t$differ_down, " ~ ", Data_t$differ_up, ")", sep = "") #差值的四分距的范围
Data_str <- data.frame(pairs_na=pairs_name,pairs_median=pairs_median,pairs_CI=pairs_CI)
Data_str <- as.matrix(Data_str) #类型转为矩阵
Data_str <- rbind(c(NA,"Median","Interquartile ranges"),Data_str) #第一行表示指标说明，NA表示不显示
jpeg(file = "results_Value_1.jpg",width =2000,height = 1800,units = "px",res =300) #结果保存
forestplot(Data_str,  #显示的文本
c(NA,Data_t$differ_median), #误差条的均值(此处为差值的中值)
c(NA,Data_t$differ_down), #误差条的下界(此处为差值的25%分位数)
c(NA,Data_t$differ_up), #误差条的上界(此处为差值的75%分位数)
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dev.off()
dat<- read.table("./input_forest_plot.txt",sep = "\t",
header = T)
forestplot(dat[,c("Comparsion","Median","Interquartile ranges")],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dat[,c("Comparsion","Median","Interquartile ranges")]
dat[c("Comparsion","Median","Interquartile ranges")]
dat[,"Comparsion"
]
dat[,"Comparsion"]
dat[,c("Comparsion","Median")]
forestplot(dat[,c("Comparsion","Median","Interquartile ranges")],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dat[,c("Comparsion","Median","Interquartile ranges")]
dat<- read.table("./input_forest_plot.txt",sep = "\t",
header = T)
forestplot(dat[,c("Comparsion","Median","Interquartile_ranges")],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dat[,c("Comparsion","Median","Interquartile ranges")]
dat[,c("Comparsion","Median","Interquartile_ranges")]
dat[,c("Comparsion","Median")]
dat[,c("Comparsion","Median")]
dat[,c("Comparsion","Interquartile_ranges")]
View(dat)
dat[,c("Comparsion","Median","Interquartile_ranges")]
dat<- read.table("./input_forest_plot.txt",sep = "\t",
header = T)
forestplot(dat[,c("Comparsion","Median","Interquartile_ranges")],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat$Diff_median,
dat$Diff_down,
dat$Diff_top,
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
,labeltext = c("comparsion","median","range"),
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
,labeltext = c("comparsion","median","range","a","b","c"),
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
labeltext = c("comparsion","median","range","a","b","c"),
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
forestplot(dat[,1:3],  #显示的文本
dat[,4],
dat[,5],
dat[,6],
zero = 0, #显示y=0的垂直线
xlog=FALSE, #x轴的坐标不取对数
labeltext = c("comparsion","median","range"),
fn.ci_norm = fpDrawCircleCI, #误差条显示方式
boxsize = 0.3, ##误差条中的圆心点大小
col=fpColors(line = "#CC79A7", #误差条的线的颜色
box="#D55E00"), #误差条的圆心点的颜色
lty.ci = 7,   # 误差条的线的线型
lwd.ci = 3,   # 误差条的线的宽度
ci.vertices.height = 0.15, # # 误差条末端的长度
txt_gp = fpTxtGp(ticks = gpar(cex = 0.5), xlab = gpar(cex = 0.7), cex = 0.7), #文本大小设置
lineheight = "auto", #线的高度
xlab="Differences in assessment indicators between relevant pairs" #x轴的标题
)
dat<- read.table(opt$file,sep = "\t",
header = T)
dat <- read.table("./input_forest_plot.txt",header = T,stringsAsFactors = F)
