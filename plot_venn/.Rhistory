}
wb <- createWorkbook()
for (cluster in c("7","0")){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = 1, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
Idents(MonocyteSubData)<-MonocyteSubData$integrated_snn_res.0.2
cluster_list<-MonocyteSubData$integrated_snn_res.0.2 %>%unique()
pval <- 0.1
logfc <- 0
wb <- createWorkbook()
for (cluster in cluster_list){
print(cluster)
addWorksheet(wb, cluster)
ifnext<-FALSE
tryCatch({
print("run findmarkers")
marker <- FindMarkers(MonocyteSubData, ident.1 = "osteoporosis", group.by = "group2",ident.2 = "Normal",subset.ident = cluster)
},error=function(e){
ifnext <<- TRUE
},warning = function(e){
ifnext <<- TRUE
})
print(ifnext)
if (ifnext){next}
print("run following cmds")
findmarker_results.sig_pos <- marker  %>% filter(p_val <= pval, avg_logFC >= logfc)
findmarker_results.sig_neg <- marker %>% filter(p_val <= pval, avg_logFC < -logfc)
marker_symbol_pos<-bitr(geneID = rownames(findmarker_results.sig_pos),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
marker_symbol_neg<-bitr(geneID = rownames(findmarker_results.sig_neg),
fromType = "ENSEMBL", toType = "SYMBOL", OrgDb = "org.Hs.eg.db")
findmarker_results.sig_pos<-  findmarker_results.sig_pos  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_pos,by = "ENSEMBL")
findmarker_results.sig_neg<-  findmarker_results.sig_neg  %>% rownames_to_column("ENSEMBL") %>% left_join(marker_symbol_neg,by = "ENSEMBL")
entrizID_pos <- bitr(geneID =findmarker_results.sig_pos$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_pos<- enrichPathway(entrizID_pos$ENTREZID)
enrichkegg_pos <- enrichKEGG(gene = entrizID_pos$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
entrizID_neg <- bitr(geneID =findmarker_results.sig_neg$ENSEMBL ,fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = "org.Hs.eg.db")
enrichReactome_neg<- enrichPathway(entrizID_neg$ENTREZID)
enrichkegg_neg <- enrichKEGG(gene = entrizID_neg$ENTREZID,organism = "hsa", pvalueCutoff = 0.05)
#write to excel
col_start <-1
# up genes
writeData(wb, sheet = cluster, "Up regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_pos) + 2
# up gene reactome enrich
writeData(wb, sheet = cluster, "Up gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_pos) + 2
# up gene kegg enrich
writeData(wb, sheet = cluster, "Up gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_pos, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_pos) + 2
# down genes
writeData(wb, sheet = cluster, "down regulated Genes", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, findmarker_results.sig_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(findmarker_results.sig_neg) + 2
# down gene reactome enrich
writeData(wb, sheet = cluster, "down gene Reactome enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichReactome_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichReactome_neg) + 2
# down gene kegg enrich
writeData(wb, sheet = cluster, "dwon gene Kegg enrich results", startRow = 1, startCol = col_start, borders = "surrounding")
writeData(wb, sheet = cluster, enrichkegg_neg, startRow = 2, startCol = col_start, borders = "surrounding")
col_start <- col_start + ncol(enrichkegg_neg) + 2
rm(marker)
rm(findmarker_results.sig_pos)
rm(enrichReactome_pos)
rm(enrichkegg_pos)
rm(findmarker_results.sig_neg)
rm(enrichReactome_neg)
rm(enrichkegg_neg)
}
saveWorkbook(wb, paste("Monocyte_clusters_enrich", ".xlsx", sep = ""), overwrite = TRUE)
setwd("E:/sync/我的坚果云/SyncSpace/BioCloud/remote_sync_dirs")
library(VennDiagram)
install.packages("VennDiagram")
a
library(VennDiagram)
A:C
demodata <- data.frame(A=sample(letters[1:6],n=100,replace = T))
demodata <- data.frame(A=sample(letters[1:6],100,replace = T))
demodata
demodata <- data.frame(A=sample(letters[1:6],100,replace = T),
B=sample(letters[1:6],100,replace = T),
C=sample(letters[1:6],100,replace = T),
D=sample(letters[1:6],100,replace = T),
E=sample(letters[1:6],100,replace = T)
)
head(demodata)
setwd("E:/sync/我的坚果云/SyncSpace/BioCloud/remote_sync_dirs/plot_venn")
source('~/.active-rstudio-document', echo=TRUE)
demodata <- read.table("./venn.demodata.txt",sep="\t",header = T,stringsAsFactors = F)
venn.plot <- venn.diagram(
x = list(A=demodata$A),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
View(demodata)
demodata <- data.frame(A=sample(letters[1:6],100,replace = T),
B=sample(letters[3:8],100,replace = T),
C=sample(letters[6:11],100,replace = T),
D=sample(letters[1:19],100,replace = T),
E=sample(letters[2:33],100,replace = T)
)
write.table(demodata,"venn.demodata.txt",sep="\t",quote = F,row.names = F)
demodata <- read.table("./venn.demodata.txt",sep="\t",header = T,stringsAsFactors = F)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
demodata <- data.frame(A=sample(letters[1:24],100,replace = T),
B=sample(letters[1:24],100,replace = T),
C=sample(letters[1:24],100,replace = T),
D=sample(letters[1:24],100,replace = T),
E=sample(letters[1:24],100,replace = T)
)
write.table(demodata,"venn.demodata.txt",sep="\t",quote = F,row.names = F)
demodata <- read.table("./venn.demodata.txt",sep="\t",header = T,stringsAsFactors = F)
View(demodata)
venn.plot <- venn.diagram(
x = demodata,
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
demodata <- data.frame(A=sample(letters[1:24],10,replace = T),
B=sample(letters[1:24],10,replace = T),
C=sample(letters[1:24],10,replace = T),
D=sample(letters[1:24],10,replace = T),
E=sample(letters[1:24],10,replace = T)
)
write.table(demodata,"venn.demodata.txt",sep="\t",quote = F,row.names = F)
demodata <- read.table("./venn.demodata.txt",sep="\t",header = T,stringsAsFactors = F)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.col = palette_list[['npg']](3),
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
palette_list=list(
"npg"= colorRampPalette(ggsci::pal_npg()(10)),
"aaas"= colorRampPalette(ggsci::pal_aaas()(10)),
"nejm"= colorRampPalette(ggsci::pal_nejm()(8)),
"lancet"= colorRampPalette(ggsci::pal_lancet()(9)),
"jama"= colorRampPalette(ggsci::pal_jama()(7)),
"jco"= colorRampPalette(ggsci::pal_jco()(10)),
"ucscgb"= colorRampPalette(ggsci::pal_aaas()(10)),
"d3"= colorRampPalette(ggsci::pal_d3()(10)),
"locuszoom"= colorRampPalette(ggsci::pal_locuszoom()(7)),
"igv"= colorRampPalette(ggsci::pal_igv()(51)),
"uchicago"= colorRampPalette(ggsci::pal_aaas()(9)),
"startrek"= colorRampPalette(ggsci::pal_startrek()(7)),
"tron"= colorRampPalette(ggsci::pal_tron()(7)),
"futurama"= colorRampPalette(ggsci::pal_futurama()(12)),
"rickandmorty"= colorRampPalette(ggsci::pal_rickandmorty()(12)),
"simpsons"= colorRampPalette(ggsci::pal_simpsons()(16))
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.col = palette_list[['npg']](3),
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.col = palette_list[['npg']](3),
fill = palette_list[['npg']](3),
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
fill = "grey", #填充色
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.col = palette_list[['npg']](3),
fill = palette_list[['npg']](3),
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
venn.plot <- venn.diagram(
x = list(A=demodata$A,B=demodata$B,C=demodata$C),
filename = "1single_Venn.tiff",
col = "black", #边框颜色
lwd = 5, #边框线宽度
fontface = "bold", #标签字体
alpha = 0.7, #透明度
cex = 4, #标签字体大小
cat.col = palette_list[['npg']](3),
fill = palette_list[['npg']](3),
cat.cex = 3, #类名字体大小
cat.fontface = "bold", #类名字体
margin = 0.04 #边际距离
)
install.packages(UpSetR)
install.packages("UpSetR")
library(UpSetR)
upset(demodata)
require(ggplot2); require(plyr); require(gridExtra); require(grid);
movies <- read.csv(system.file("extdata","movies.csv",package = "UpSetR"), header = TRUE, sep=";")
upset(movies, nsets = 7, nintersects = 30, mb.ratio = c(0.5, 0.5),
order.by = c("freq", "degree"), decreasing = c(TRUE,FALSE))
View(movies)
